build-docker-image:
  stage: build
  tags:
    - shell
  # needs:
  #   - run-tests
  before_script:
    - export IMAGE_VERSION=$(cat deno.json | jq -r .version)
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_VERSION-build$CI_PIPELINE_IID .
    - docker tag $CI_REGISTRY_IMAGE:$IMAGE_VERSION-build$CI_PIPELINE_IID $CI_REGISTRY_IMAGE:latest
    - docker images


push-to-registry:
  stage: publish
  tags:
    - shell
  needs:
    - build-docker-image
  before_script:
    - export IMAGE_VERSION=$(cat deno.json | jq -r .version)
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_VERSION-build$CI_PIPELINE_IID
    - docker push $CI_REGISTRY_IMAGE:latest
